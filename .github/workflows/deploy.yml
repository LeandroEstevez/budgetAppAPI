name: deploy-to-production

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::807602152072:role/github-ci
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: private

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id budgetapi --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REGISTRY_ALIAS: budgetappapi
          REPOSITORY: budgetappapi
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t budgetappapi .
          docker tag budgetappapi:latest 807602152072.dkr.ecr.us-east-1.amazonaws.com/budgetappapi:latest
          docker push 807602152072.dkr.ecr.us-east-1.amazonaws.com/budgetappapi:latest

      - name: Update kube config
        run: aws eks update-kubeconfig --name budgetapi --region us-east-2

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f eks/aws-auth.yaml
          kubectl apply -f eks/deployment.yaml
          kubectl apply -f eks/service.yaml
          kubectl apply -f eks/issuer.yaml
          kubectl apply -f eks/ingress.yaml
